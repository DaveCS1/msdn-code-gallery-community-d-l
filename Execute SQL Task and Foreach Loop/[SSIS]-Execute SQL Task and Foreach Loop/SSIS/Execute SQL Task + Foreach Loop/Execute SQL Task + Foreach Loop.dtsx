<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/23/2012 3:28:38 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="XPSSTUDIO"
  DTS:CreatorName="XPSStudio\jamie"
  DTS:DTSID="{DC1B417C-C5FA-4705-94CE-F1C732F7C076}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.1750.32"
  DTS:LocaleID="2057"
  DTS:ObjectName="Execute SQL Task   Foreach Loop"
  DTS:PackageType="5"
  DTS:VersionBuild="14"
  DTS:VersionGUID="{129B149E-E207-4E58-B5B5-FBAB2452A999}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[AdventureWorks2008R2]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{0FAF5909-DF42-47DC-BCC0-CDBE49A852C5}"
      DTS:ObjectName="AdventureWorks2008R2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=AdventureWorks2008R2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{498AAF68-2490-4212-A693-248615243E4A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerId">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED8403A5-194D-4EC8-B9BB-ABC7D0792214}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Customers">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7FA7A914-6ED0-45B0-AE49-E33E5C2F1959}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FirstName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{505A3629-9EF3-44F8-9BE0-4522C5C6D273}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6016A01D-AFBB-4643-B34A-ADE6228CBB5E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#x9;p.[Name]&#xA;,&#x9;&#x9;[TotalSpend]&#x9;=&#x9;SUM(sod.UnitPrice * sod.[OrderQty])&#xA;FROM&#x9;Sales.[SalesOrderHeader] soh&#xA;INNER JOIN [Sales].[SalesOrderDetail] sod&#x9;&#x9;ON&#x9;soh.[SalesOrderID]&#x9;=&#x9;sod.[SalesOrderID]&#xA;INNER JOIN [Production].[Product] p&#x9;&#x9;&#x9;&#x9;ON&#x9;sod.[ProductID]&#x9;&#x9;=&#x9;p.[ProductID]&#xA;WHERE soh.CustomerID = &quot; + (DT_WSTR,10)@[User::CustomerId]  + &quot;&#xA;GROUP&#x9;BY p.[Name]&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLQuery">
      <DTS:VariableValue
        DTS:DataType="8">SELECT	p.[Name]
,		[TotalSpend]	=	SUM(sod.UnitPrice * sod.[OrderQty])
FROM	Sales.[SalesOrderHeader] soh
INNER JOIN [Sales].[SalesOrderDetail] sod		ON	soh.[SalesOrderID]	=	sod.[SalesOrderID]
INNER JOIN [Production].[Product] p				ON	sod.[ProductID]		=	p.[ProductID]
WHERE soh.CustomerID = -1
GROUP	BY p.[Name]
</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\FEL Loop over customers"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D9D1D6C8-3DFE-463D-A07E-912FE920C582}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="FEL Loop over customers">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.SqlServer.Dts.Runtime.Enumerators.ADO.ForEachADOEnumerator, Microsoft.SqlServer.ForEachADOEnumerator, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
        DTS:DTSID="{DCD87399-3FB1-4A29-A903-B09C89FE9C70}"
        DTS:ObjectName="{DCD87399-3FB1-4A29-A903-B09C89FE9C70}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Customers" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FEL Loop over customers\DFT Get Sales for a given customer"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{06C8620C-39C1-4392-B5E6-3CBAD7599D7E}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT Get Sales for a given customer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data"
                  componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE_SRC Get Sales data"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::SQLQuery</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[AdventureWorks2008R2]"
                      connectionManagerRefId="Package.ConnectionManagers[AdventureWorks2008R2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].ExternalColumns[Name]"
                          length="50"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[Name]"
                          name="Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[TotalSpend]"
                          dataType="cy"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].ExternalColumns[TotalSpend]"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[TotalSpend]"
                          name="TotalSpend"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].ExternalColumns[Name]"
                          dataType="wstr"
                          length="50"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].ExternalColumns[TotalSpend]"
                          dataType="cy"
                          name="TotalSpend" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[Name]"
                          name="Name" />
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[TotalSpend]"
                          dataType="cy"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[TotalSpend]"
                          name="TotalSpend" />
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All"
                  componentClassID="{B594E9A8-4351-4939-891C-CFE1AB93E925}"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Inputs[Union All Input 1].Columns[Name]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Name"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Inputs[Union All Input 1].Columns[TotalSpend]"
                          cachedDataType="cy"
                          cachedName="TotalSpend"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output].Columns[TotalSpend]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[TotalSpend]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Inputs[Union All Input 2]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[Name]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[Name]"
                          name="Name" />
                        <outputColumn
                          refId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[TotalSpend]"
                          dataType="cy"
                          lineageId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Outputs[Union All Output 1].Columns[TotalSpend]"
                          name="TotalSpend" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FEL Loop over customers\DFT Get Sales for a given customer.Paths[OLE DB Source Output]"
                  endId="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All.Inputs[Union All Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\FEL Loop over customers\SCR Output enumerated values in a Message Box"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{AE4D9918-5C77-4231-A041-C6E3DA50DEC0}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR Output enumerated values in a Message Box"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d711358418d34166a217c53bb9307662"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d711358418d34166a217c53bb9307662.Properties.Settings.get_Default():ST_d711358418d34166a217c53bb9307662.Properties.Sett" +
    "ings")]

namespace ST_d711358418d34166a217c53bb9307662.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_d711358418d34166a217c53bb9307662
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Variables vars = null;
            bool fireAgain = true;
            Dts.VariableDispenser.LockForRead("User::CustomerId");
            Dts.VariableDispenser.LockForRead("User::FirstName");
            Dts.VariableDispenser.LockForRead("User::LastName");
            Dts.VariableDispenser.GetVariables(ref vars);

            var message = String.Format("CustomerId={0}, FirstName={1}, LastName={2}",vars["User::CustomerId"].Value, vars["User::FirstName"].Value,vars["User::LastName"].Value);
            Dts.Events.FireInformation(1, "", 
                
                message,
                
                "", 0, ref fireAgain);
            MessageBox.Show(message);
            Dts.Variables.Unlock();

            Dts.TaskResult = (int)ScriptResults.Success;

		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_d711358418d34166a217c53bb9307662.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{918F6042-87BE-43BF-BC80-3782DE376177}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d711358418d34166a217c53bb9307662</RootNamespace>
    <AssemblyName>ST_d711358418d34166a217c53bb9307662</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d711358418d34166a217c53bb9307662</msb:CodeName>
		<msb:DisplayName>ST_d711358418d34166a217c53bb9307662</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{995C5018-1C2A-4220-BD8E-CF7B75056CD7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d711358418d34166a217c53bb9307662.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d711358418d34166a217c53bb9307662")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("ST_d711358418d34166a217c53bb9307662")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d711358418d34166a217c53bb9307662.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d711358418d34166a217c53bb9307662.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d711358418d34166a217c53bb9307662.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d711358418d34166a217c53bb9307662.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d711358418d34166a217c53bb9307662.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d711358418d34166a217c53bb9307662.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANqbbE8AAAAAAAAAAOAAAiELAQgAABIAAAAIAAAAAAAAfjAA
AAAgAAAAQAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACgwAABTAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MAAAAAAAAEgAAAACAAUAYCIAAMgNAAABAAAAAAAAAKghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzADAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBwDTAAAAAgAAERQKFwsCKBYAAApvFwAACnJzAABwbxgAAAoCKBYA
AApvFwAACnKVAABwbxgAAAoCKBYAAApvFwAACnK1AABwbxgAAAoCKBYAAApvFwAAChIAbxkAAApy
0wAAcAZycwAAcG8aAAAKbxsAAAoGcpUAAHBvGgAACm8bAAAKBnK1AABwbxoAAApvGwAACigcAAAK
DAIoFgAACm8dAAAKF3IrAQBwCHIrAQBwFhIBbx4AAAoIKB8AAAomAigWAAAKbyAAAApvIQAACgIo
FgAAChZvIgAACioeAigjAAAKKgAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAABwEAAAjfgAAiAQAAFwGAAAjU3RyaW5ncwAAAADkCgAAMAEAACNVUwAU
DAAAEAAAACNHVUlEAAAAJAwAAKQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEA
AAAiAAAABQAAAAYAAAAJAAAAAQAAACMAAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABQAA
AAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYA
VwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNw
AgYAjwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4A
ogQUAQ4AxAQUARIAHQX9BBIAUQX9BBIAaAX9BAYAhAW6AA4AkgUUARYA1gXBBRYA4QXBBQAAAAAB
AAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMA
AAARAAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwAB
AFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIA
syAAAAAAhhi8ARsAAgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIAmyEAAAAAhhi8ARsAAgAA
AAEANwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwB
WACBALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJ
ALwBGwARALwBGwDRALwBGwAZANYEjQDZAC8FkgDhAEUFWADhAFsFlwDpAHEFngDxAHoFpAD5AIsF
qADZAKYFsAABAbEFtgAJAe4FwQDZAPMFyADpAAEGGwDZAAgGXQAZALwBGwAIABQATgAIABgAUwAp
AJMAgAAuABsARQEuACMARQEuAGMAgwEuAAsA1AAuABMAHAEuADMAHAEuACsASwEuADsAWgEuAEMA
RQEuAFsAegFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AM0AAgABAAMAAwAAAG8BLwAAAO4BNAAA
ABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAHERbW8AAAAAAAB/AAAABAAAAAAA
AAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAA
AAAAAAAAAAAACgDeBAAAAAAEAAAAAAAAAAAAAAABAMEFAAAAAAAAAAABAAAAFwYAAAUABAAAAAAA
ADxNb2R1bGU+AFNUX2Q3MTEzNTg0MThkMzQxNjZhMjE3YzUzYmI5MzA3NjYyLmRsbABSZXNvdXJj
ZXMAU1RfZDcxMTM1ODQxOGQzNDE2NmEyMTdjNTNiYjkzMDc2NjIuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUX2Q3MTEzNTg0MThkMzQxNjZhMjE3YzUzYmI5MzA3NjYyAFNjcmlwdFJl
c3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jl
c291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0
YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZh
cmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBMb2NrRm9yUmVhZABWYXJpYWJs
ZXMAR2V0VmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBTdHJpbmcARm9ybWF0
AEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLldp
bmRvd3MuRm9ybXMATWVzc2FnZUJveABEaWFsb2dSZXN1bHQAU2hvdwBnZXRfVmFyaWFibGVzAFVu
bG9jawBzZXRfVGFza1Jlc3VsdABTVF9kNzExMzU4NDE4ZDM0MTY2YTIxN2M1M2JiOTMwNzY2Mi5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfAGQANwAxADEAMwA1ADgANAAx
ADgAZAAzADQAMQA2ADYAYQAyADEANwBjADUAMwBiAGIAOQAzADAANwA2ADYAMgAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAIVUAcwBlAHIAOgA6AEMAdQBzAHQAbwBt
AGUAcgBJAGQAAB9VAHMAZQByADoAOgBGAGkAcgBzAHQATgBhAG0AZQAAHVUAcwBlAHIAOgA6AEwA
YQBzAHQATgBhAG0AZQAAV0MAdQBzAHQAbwBtAGUAcgBJAGQAPQB7ADAAfQAsACAARgBpAHIAcwB0
AE4AYQBtAGUAPQB7ADEAfQAsACAATABhAHMAdABOAGEAbQBlAD0AewAyAH0AAAEAAAAAFsHBBJmT
9UWgJLg70LmUmwAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZ
BAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElER
VQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEGIAEBEBJ1BSAB
EnkcAyAAHAcABA4OHBwcBSAAEoCBCiAGAQgODg4IEAIGAAERgIkOBCAAEnUGBwMSdQIORwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0KAEAI1NUX2Q3MTEzNTg0MThkMzQxNjZhMjE3YzUzYmI5MzA3NjYyAAAFAQAAAAAO
AQAJTWljcm9zb2Z0AAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIwMTIAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAFAwAAAAAAAAAAAAAG4wAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABgMAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA+AMAAAAAAAAAAAAA+AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAG1vcREAAAEAbW9xET8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADQDAAABADAAMAAw
ADAAMAA0AGIAMAAAADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMA
bwBmAHQAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZAA3
ADEAMQAzADUAOAA0ADEAOABkADMANAAxADYANgBhADIAMQA3AGMANQAzAGIAYgA5ADMAMAA3ADYA
NgAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADQANAA2ADUALgAy
ADgANQAyADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZAA3ADEA
MQAzADUAOAA0ADEAOABkADMANAAxADYANgBhADIAMQA3AGMANQAzAGIAYgA5ADMAMAA3ADYANgAy
AC4AZABsAGwAAABcABsAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIA
aQBnAGgAdAAgAEAAIABNAGkAYwByAG8AcwBvAGYAdAAgADIAMAAxADIAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBkADcAMQAxADMANQA4ADQAMQA4AGQA
MwA0ADEANgA2AGEAMgAxADcAYwA1ADMAYgBiADkAMwAwADcANgA2ADIALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZAA3ADEAMQAzADUAOAA0ADEAOABkADMA
NAAxADYANgBhADIAMQA3AGMANQAzAGIAYgA5ADMAMAA3ADYANgAyAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADQANgA1AC4AMgA4ADUAMgA1AAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA0ADQANgA1AC4AMgA4
ADUAMgA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\FEL Loop over customers.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AE9B9B0C-7378-4F21-8E65-3514FC37F268}"
          DTS:From="Package\FEL Loop over customers\SCR Output enumerated values in a Message Box"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\FEL Loop over customers\DFT Get Sales for a given customer" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{7F9EB2C2-38C9-4CFA-84CF-968461DCDEDD}"
          DTS:ObjectName="{7F9EB2C2-38C9-4CFA-84CF-968461DCDEDD}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CustomerId" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{53A528CC-B9D4-4BC7-9BB2-5DA210DB80A6}"
          DTS:ObjectName="{53A528CC-B9D4-4BC7-9BB2-5DA210DB80A6}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::FirstName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C7341ECB-1D15-4097-B229-09E4A08F9B92}"
          DTS:ObjectName="{C7341ECB-1D15-4097-B229-09E4A08F9B92}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::LastName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Get list of 3 customers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BFF1FB9B-5457-4D7A-A9CE-3E2359A5E25D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Get list of 3 customers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server &quot;2012&quot; RC0; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0FAF5909-DF42-47DC-BCC0-CDBE49A852C5}"
          SQLTask:SqlStatementSource="SELECT&#x9;TOP 3 CustomerID,p.FirstName,p.LastName&#xA;FROM&#x9;[Sales].[Customer] c&#xA;INNER JOIN [Person].[Person] p&#x9;&#x9;&#x9;ON&#x9;c.[PersonID]&#x9;=&#x9;p.BusinessEntityID&#xA;WHERE&#x9;c.PersonID IS NOT NULL&#xA;&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Customers" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B3DBF6E0-5252-43D1-9913-7FD96B9966FE}"
      DTS:From="Package\SQL Get list of 3 customers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\FEL Loop over customers" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph">
        <AnnotationLayout
          Text="This sample is intended to demonstrate how one might populate an Object&#xD;&#xA;variable with a recordset and then loop over that recordset using a Foreach Loop.&#xD;&#xA;&#xD;&#xA;Within the Foreach Loop it then outputs the enumerated data in a Script Task&#xD;&#xA;and then extracts some data from the database using the enumerated &#xD;&#xA;CustomerID. However, the real purpose of this sample is to demonstrate how an&#xD;&#xA;Execute SQL Task and a Foreach Loop can work in concert with each other.&#xD;&#xA;&#xD;&#xA;It assumes that you have an instance of the [AdventureWorks2008R2] database &#xD;&#xA;available on localhost.&#xD;&#xA;&#xD;&#xA;Jamie Thomson&#xD;&#xA;http://sqlblog.com/blogs/jamie_thomson&#xD;&#xA;@jamiet"
          ParentId="Package"
          FontInfo="{x:Null}"
          Size="460.8,249.6"
          Id="f60ab966-aab4-40bf-90cf-d33adf731298"
          TopLeft="131.200002247947,16.3294120049394" />
        <NodeLayout
          Size="208,41.6"
          Id="Package\SQL Get list of 3 customers"
          TopLeft="66.8190487705932,292.235298227356" />
        <NodeLayout
          Size="312,41.6"
          Id="Package\FEL Loop over customers\SCR Output enumerated values in a Message Box"
          TopLeft="26.2857192292507,16.6117692360004" />
        <NodeLayout
          Size="246.4,41.6"
          Id="Package\FEL Loop over customers\DFT Get Sales for a given customer"
          TopLeft="62.6666722297669,101.411769965281" />
        <EdgeLayout
          Id="Package\FEL Loop over customers.PrecedenceConstraints[Constraint]"
          TopLeft="184.076195729509,58.2117692360004">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,43.2000007292803"
              Start="0,0"
              End="0,35.7000007292803">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.7000007292803" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="338.4,198.4"
          Size="338.4,241.6"
          Id="Package\FEL Loop over customers"
          TopLeft="263.200004495893,339.34118124094" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="274.819048770593,313.035298227356">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="157.5809557253,26.3058830135834"
              Start="0,0"
              End="157.5809557253,18.8058830135834">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="153.5809557253,0" />
                  <mssgle:CubicBezierSegment
                    Point1="153.5809557253,0"
                    Point2="157.5809557253,0"
                    Point3="157.5809557253,4" />
                  <mssgle:LineSegment
                    End="157.5809557253,18.8058830135834" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\FEL Loop over customers\DFT Get Sales for a given customer">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195.2,41.6"
          Id="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data"
          TopLeft="204.914289217579,130.117648894894" />
        <NodeLayout
          Size="121.6,41.6"
          Id="Package\FEL Loop over customers\DFT Get Sales for a given customer\Union All"
          TopLeft="231.771432532096,229.83529735222" />
        <EdgeLayout
          Id="Package\FEL Loop over customers\DFT Get Sales for a given customer.Paths[OLE DB Source Output]"
          TopLeft="302.514289217579,171.717648894894">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-9.9428566854827,58.1176484573259"
              Start="0,0"
              End="-9.9428566854827,50.6176484573259">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.0588242286629" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.0588242286629"
                    Point2="0,29.0588242286629"
                    Point3="-4,29.0588242286629" />
                  <mssgle:LineSegment
                    End="-5.9428566854827,29.0588242286629" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.9428566854827,29.0588242286629"
                    Point2="-9.9428566854827,29.0588242286629"
                    Point3="-9.9428566854827,33.0588242286629" />
                  <mssgle:LineSegment
                    End="-9.9428566854827,50.6176484573259" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="As this is purely a sample I am simply&#xD;&#xA;terminating this dataflow with a Union All"
          ParentId="Package\FEL Loop over customers\DFT Get Sales for a given customer"
          FontInfo="{x:Null}"
          Size="249.6,60"
          Id="68eb144e-da60-4a88-8364-907b5d8dc8c1"
          TopLeft="183.200003133501,282.447062795962" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FEL Loop over customers\DFT Get Sales for a given customer\OLE_SRC Get Sales data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>