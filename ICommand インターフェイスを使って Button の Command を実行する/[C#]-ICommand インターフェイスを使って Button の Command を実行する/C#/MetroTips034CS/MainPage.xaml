<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MetroTips034CS.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MetroTips034CS"
    xmlns:common="using:MetroTips034CS.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Page.Resources>

    <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
    <x:String x:Key="AppName">WinRT/Metro TIPS #34 (C#)</x:String>

    <local:DateTimeToHhMmSsConverter x:Key="DateTimeValueConverter" />
    <common:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    
    <local:Clock x:Key="ClockInstance" />
    <local:GmtClock x:Key="GmtClockInstance" />
  </Page.Resources>
  <Page.DataContext>
    <!-- 実行時にページのデータ・コンテキストに設定される -->
    <Binding Source="{StaticResource GmtClockInstance}"/>
  </Page.DataContext>
  <d:Page.DataContext>
    <!-- デザイン時にページのデータ・コンテキストに設定される -->
    <Binding Source="{StaticResource ClockInstance}"/>
  </d:Page.DataContext>


  <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
  <Grid Style="{StaticResource LayoutRootStyle}">
    <Grid.RowDefinitions>
      <RowDefinition Height="140"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <!-- Back button and page title -->
    <Grid Background="#00a2e8">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
      <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
    </Grid>

    <StackPanel Grid.Row="1" Margin="120,40,40,0">
      <StackPanel Margin="0,0,0,0">
        <TextBlock Text="DateTimeOffset をそのままバインド" FontSize="21" />
        <TextBlock x:Name="textClock1" FontSize="120" Foreground="DarkGoldenrod"
                   Text="{Binding NowTime}"  />
      </StackPanel>
      <StackPanel x:Name="StackPanelTime2" Margin="0,20,0,0" 
                  DataContext="{StaticResource ClockInstance}"
                  d:DataContext="{d:DesignInstance Type=local:GmtClock, IsDesignTimeCreatable=True}"
                  >
        <!-- このStackPanelと子にあたるコントロールには、ページとは異なるデータ・コンテキストが設定される -->
        <TextBlock Text="DateTimeOffset をバリュー・コンバータを介してバインド" FontSize="21" />
        <TextBlock x:Name="textClock2" FontSize="120" Foreground="DarkCyan"
                   Text="{Binding NowTime, Converter={StaticResource DateTimeValueConverter}}" 
                    />
      </StackPanel>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Margin="0,20,0,0">
          <TextBlock Text="bool をバリュー・コンバータを介して Visibility プロパティにバインド" 
                     FontSize="21" />
          <Ellipse x:Name="RedCircle" Width="90" Height="90" Fill="DarkRed" HorizontalAlignment="Left"
                   Visibility="{Binding IsEven, Converter={StaticResource BoolToVisibilityConverter}}" />
          <Ellipse x:Name="GreenCircle" Width="90" Height="90" Fill="Green" HorizontalAlignment="Left"
                   Visibility="{Binding IsOdd, Converter={StaticResource BoolToVisibilityConverter}}" />
        </StackPanel>
        <!-- *** ICommand のテストのために追加した StackPanel -->
        <StackPanel x:Name="stackPanelForTest" Grid.Column="1" Margin="0,20,0,0" 
                    DataContext="{StaticResource ClockInstance}">
          <TextBlock Text="ICommand オブジェクトを Button の Command プロパティにバインド" 
                     FontSize="21" />
          <StackPanel Orientation="Horizontal">
            <StackPanel>
              <Button Content="今だ!!" Command="{Binding Command}" CommandParameter="Green"  Width="250" FontSize="36" FontFamily="Yu Gothic, Meiryo UI" Margin="0,5" />
              <Rectangle Width="250" Height="5" Fill="DarkRed" HorizontalAlignment="Left"
                       Visibility="{Binding IsEven, Converter={StaticResource BoolToVisibilityConverter}}" />
            </StackPanel>
            <StackPanel Margin="10,0,0,0">
              <Button Content="今でしょ!?" Command="{Binding Command}" CommandParameter="Pink"  Width="250" FontSize="36" FontFamily="Yu Gothic, Meiryo UI" Margin="0,5" />
              <Rectangle Width="250" Height="5" Fill="DarkRed" HorizontalAlignment="Left"
                       Visibility="{Binding IsEven, Converter={StaticResource BoolToVisibilityConverter}}" />
            </StackPanel>
          </StackPanel>
        </StackPanel>
      </Grid>
    </StackPanel>



    <VisualStateManager.VisualStateGroups>

      <!-- Visual states reflect the application's view state -->
      <VisualStateGroup x:Name="ApplicationViewStates">
        <VisualState x:Name="FullScreenLandscape"/>
        <VisualState x:Name="Filled"/>

        <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
        <VisualState x:Name="FullScreenPortrait">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>

        <!-- The back button and title have different styles when snapped -->
        <VisualState x:Name="Snapped">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
              <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</common:LayoutAwarePage>
