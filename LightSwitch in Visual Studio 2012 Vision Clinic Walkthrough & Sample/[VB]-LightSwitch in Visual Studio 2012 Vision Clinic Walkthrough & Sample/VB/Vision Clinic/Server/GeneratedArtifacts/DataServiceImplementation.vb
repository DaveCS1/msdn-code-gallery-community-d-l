'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Namespace LightSwitchApplication.Implementation
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataDataService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataService(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().ApplicationData
        End Function
    
    End Class
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class PrescriptionContosoDataService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataService(Of Global.PrescriptionContoso.Implementation.PrescriptionContosoObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().PrescriptionContoso
        End Function
    
    End Class
    
    <Global.System.ServiceModel.DomainServices.Hosting.EnableClientAccess()> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataDomainService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DomainService(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
    #Region "Public methods"
    
    #Region "Patient"
    
        Public Sub InsertPatient(ByVal entity As Global.ApplicationData.Implementation.Patient)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Patients.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdatePatient(ByVal currentEntity As Global.ApplicationData.Implementation.Patient)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Patients, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeletePatient(ByVal entity As Global.ApplicationData.Implementation.Patient)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Patients.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Invoice"
    
        Public Sub InsertInvoice(ByVal entity As Global.ApplicationData.Implementation.Invoice)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Invoices.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateInvoice(ByVal currentEntity As Global.ApplicationData.Implementation.Invoice)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Invoices, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteInvoice(ByVal entity As Global.ApplicationData.Implementation.Invoice)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Invoices.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "InvoiceDetail"
    
        Public Sub InsertInvoiceDetail(ByVal entity As Global.ApplicationData.Implementation.InvoiceDetail)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.InvoiceDetails.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateInvoiceDetail(ByVal currentEntity As Global.ApplicationData.Implementation.InvoiceDetail)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.InvoiceDetails, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteInvoiceDetail(ByVal entity As Global.ApplicationData.Implementation.InvoiceDetail)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.InvoiceDetails.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Appointment"
    
        Public Sub InsertAppointment(ByVal entity As Global.ApplicationData.Implementation.Appointment)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Appointments.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateAppointment(ByVal currentEntity As Global.ApplicationData.Implementation.Appointment)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Appointments, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteAppointment(ByVal entity As Global.ApplicationData.Implementation.Appointment)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Appointments.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Queries"
    #End Region
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __GetEntitySetCanInformation(ByVal entitySetName as String) As Integer
            Return MyBase.GetEntitySetCanInformation(entitySetName)
        End Function
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __CanExecuteOperation(ByVal operationName as String) As Boolean
            Return MyBase.CanExecuteOperation(operationName)
        End Function
    
    #End Region
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().ApplicationData
        End Function
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataServiceImplementation
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService)
        End Sub
    
    #Region "Queries"
    #End Region

    #Region "Protected methods"
        Protected Overrides Function CreateObject(ByVal type As Global.System.Type) As Object
            If (type Is GetType(Global.ApplicationData.Implementation.Patient)) Then
                Return New Global.ApplicationData.Implementation.Patient
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Invoice)) Then
                Return New Global.ApplicationData.Implementation.Invoice
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.InvoiceDetail)) Then
                Return New Global.ApplicationData.Implementation.InvoiceDetail
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Appointment)) Then
                Return New Global.ApplicationData.Implementation.Appointment
            End If
    
            Return MyBase.CreateObject(type)
        End Function
    
        Protected Overrides Function CreateObjectContext() As Global.ApplicationData.Implementation.ApplicationDataObjectContext
            Dim assemblyName As String = Global.System.Reflection.Assembly.GetExecutingAssembly().GetName().Name
            Return New Global.ApplicationData.Implementation.ApplicationDataObjectContext(MyBase.GetEntityConnectionString( _
                "_IntrinsicData", _
                "res://" + assemblyName + "/ApplicationData.csdl|res://" + assemblyName + "/ApplicationData.ssdl|res://" + assemblyName + "/ApplicationData.msl", _
                "System.Data.SqlClient"))
        End Function
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Patient)) Then
                Return New Global.ApplicationData.Implementation.Patient()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Invoice)) Then
                Return New Global.ApplicationData.Implementation.Invoice()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.InvoiceDetail)) Then
                Return New Global.ApplicationData.Implementation.InvoiceDetail()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Appointment)) Then
                Return New Global.ApplicationData.Implementation.Appointment()
            End If
            Return Nothing
        End Function
    
    #End Region
    
    End Class
    
    <Global.System.ServiceModel.DomainServices.Hosting.EnableClientAccess()> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class PrescriptionContosoDomainService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DomainService(Of Global.PrescriptionContoso.Implementation.PrescriptionContosoObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
    #Region "Public methods"
    
    #Region "Product"
    
        Public Sub InsertProduct(ByVal entity As Global.PrescriptionContoso.Implementation.Product)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Products.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateProduct(ByVal currentEntity As Global.PrescriptionContoso.Implementation.Product)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Products, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteProduct(ByVal entity As Global.PrescriptionContoso.Implementation.Product)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Products.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "ProductRebate"
    
        Public Sub InsertProductRebate(ByVal entity As Global.PrescriptionContoso.Implementation.ProductRebate)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.ProductRebates.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateProductRebate(ByVal currentEntity As Global.PrescriptionContoso.Implementation.ProductRebate)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.ProductRebates, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteProductRebate(ByVal entity As Global.PrescriptionContoso.Implementation.ProductRebate)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ProductRebates.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Queries"
        Public Function RelatedProducts(ByVal frameworkOperators As String, ByVal Category As String) As Global.System.Linq.IQueryable(Of Global.PrescriptionContoso.Implementation.Product)
            Return Me.GetQuery(Of Global.PrescriptionContoso.Implementation.Product)("RelatedProducts", frameworkOperators, Category)
        End Function
    
    #End Region
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __GetEntitySetCanInformation(ByVal entitySetName as String) As Integer
            Return MyBase.GetEntitySetCanInformation(entitySetName)
        End Function
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __CanExecuteOperation(ByVal operationName as String) As Boolean
            Return MyBase.CanExecuteOperation(operationName)
        End Function
    
    #End Region
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().PrescriptionContoso
        End Function
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class PrescriptionContosoServiceImplementation
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation(Of Global.PrescriptionContoso.Implementation.PrescriptionContosoObjectContext)
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService)
        End Sub
    
    #Region "Queries"
        Public Function RelatedProducts(ByVal Category As String) As Global.System.Linq.IQueryable(Of Global.PrescriptionContoso.Implementation.Product)
            Dim query As Global.System.Linq.IQueryable(Of Global.PrescriptionContoso.Implementation.Product)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.PrescriptionContoso.Implementation.Product)("Products"), _
                Function(p) (p.Category.CompareTo(Category) = 0))
            Return query
        End Function
    
    #End Region

    #Region "Protected methods"
        Protected Overrides Function CreateObject(ByVal type As Global.System.Type) As Object
            If (type Is GetType(Global.PrescriptionContoso.Implementation.Product)) Then
                Return New Global.PrescriptionContoso.Implementation.Product
            End If
            If (type Is GetType(Global.PrescriptionContoso.Implementation.ProductRebate)) Then
                Return New Global.PrescriptionContoso.Implementation.ProductRebate
            End If
    
            Return MyBase.CreateObject(type)
        End Function
    
        Protected Overrides Function CreateObjectContext() As Global.PrescriptionContoso.Implementation.PrescriptionContosoObjectContext
            Dim assemblyName As String = Global.System.Reflection.Assembly.GetExecutingAssembly().GetName().Name
            Return New Global.PrescriptionContoso.Implementation.PrescriptionContosoObjectContext(MyBase.GetEntityConnectionString( _
                "PrescriptionContoso", _
                "res://" + assemblyName + "/PrescriptionContoso.csdl|res://" + assemblyName + "/PrescriptionContoso.ssdl|res://" + assemblyName + "/PrescriptionContoso.msl", _
                "System.Data.SqlClient"))
        End Function
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Product)) Then
                Return New Global.PrescriptionContoso.Implementation.Product()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.ProductRebate)) Then
                Return New Global.PrescriptionContoso.Implementation.ProductRebate()
            End If
            Return Nothing
        End Function
    
    #End Region
    
    End Class
    
    #Region "DataServiceImplementationFactory"
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.IDataServiceFactory))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class DataServiceFactory
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    
        Protected Overrides Function CreateDataService(ByVal dataServiceType As Global.System.Type) As Global.Microsoft.LightSwitch.IDataService
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.ApplicationDataService()
            End If
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.PrescriptionContoso)) Then
                Return New Global.LightSwitchApplication.PrescriptionContosoService()
            End If
            Return MyBase.CreateDataService(dataServiceType)
        End Function
    
        Protected Overrides Function CreateDataServiceImplementation(Of TDataService As Global.Microsoft.LightSwitch.IDataService)(ByVal dataService As TDataService) As Global.Microsoft.LightSwitch.Internal.IDataServiceImplementation
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService)
            End If
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.PrescriptionContoso)) Then
                Return New Global.LightSwitchApplication.Implementation.PrescriptionContosoServiceImplementation(dataService)
            End If
            Return MyBase.CreateDataServiceImplementation(dataService)
        End Function
    End Class
    #End Region
    
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class __TypeMapping
        Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider
        Private Function GetImplementationType(ByVal definitionType As Global.System.Type) As Global.System.Type Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType
            If GetType(Global.LightSwitchApplication.Patient).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Patient)
            End If
            If GetType(Global.LightSwitchApplication.Invoice).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Invoice)
            End If
            If GetType(Global.LightSwitchApplication.InvoiceDetail).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.InvoiceDetail)
            End If
            If GetType(Global.LightSwitchApplication.Appointment).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Appointment)
            End If
            If GetType(Global.LightSwitchApplication.Product).Equals(definitionType)
                Return GetType(Global.PrescriptionContoso.Implementation.Product)
            End If
            If GetType(Global.LightSwitchApplication.ProductRebate).Equals(definitionType)
                Return GetType(Global.PrescriptionContoso.Implementation.ProductRebate)
            End If
            Return Nothing
        End Function
    End Class
End Namespace

Namespace ApplicationData.Implementation

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Patient
        Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _FirstNameImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.FirstName
            Get
                Return Me.FirstName
            End Get
            Set(ByVal value As String)
                Me.FirstName = value
            End Set
        End Property
        
        Private Property _LastNameImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.LastName
            Get
                Return Me.LastName
            End Get
            Set(ByVal value As String)
                Me.LastName = value
            End Set
        End Property
        
        Private Property _StreetImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Street
            Get
                Return Me.Street
            End Get
            Set(ByVal value As String)
                Me.Street = value
            End Set
        End Property
        
        Private Property _Street2Implementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Street2
            Get
                Return Me.Street2
            End Get
            Set(ByVal value As String)
                Me.Street2 = value
            End Set
        End Property
        
        Private Property _CityImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.City
            Get
                Return Me.City
            End Get
            Set(ByVal value As String)
                Me.City = value
            End Set
        End Property
        
        Private Property _StateImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.State
            Get
                Return Me.State
            End Get
            Set(ByVal value As String)
                Me.State = value
            End Set
        End Property
        
        Private Property _ZipImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Zip
            Get
                Return Me.Zip
            End Get
            Set(ByVal value As String)
                Me.Zip = value
            End Set
        End Property
        
        Private Property _PrimaryPhoneImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.PrimaryPhone
            Get
                Return Me.PrimaryPhone
            End Get
            Set(ByVal value As String)
                Me.PrimaryPhone = value
            End Set
        End Property
        
        Private Property _SecondaryPhoneImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.SecondaryPhone
            Get
                Return Me.SecondaryPhone
            End Get
            Set(ByVal value As String)
                Me.SecondaryPhone = value
            End Set
        End Property
        
        Private Property _EmailImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Email
            Get
                Return Me.Email
            End Get
            Set(ByVal value As String)
                Me.Email = value
            End Set
        End Property
        
        Private Property _PolicyNumberImplementation() As String Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.PolicyNumber
            Get
                Return Me.PolicyNumber
            End Get
            Set(ByVal value As String)
                Me.PolicyNumber = value
            End Set
        End Property
        
        Private ReadOnly Property _InvoicesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Invoices
            Get
                Return Me.Invoices
            End Get
        End Property
        
        Private ReadOnly Property _AppointmentsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Patient.DetailsClass.IImplementation.Appointments
            Get
                Return Me.Appointments
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    <Global.System.ComponentModel.DataAnnotations.MetadataType(GetType(Global.ApplicationData.Implementation.Invoice.Metadata))> _
    Partial Public Class Invoice
        Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _InvoiceDateImplementation() As Date Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.InvoiceDate
            Get
                Return Me.InvoiceDate
            End Get
            Set(ByVal value As Date)
                Me.InvoiceDate = value
            End Set
        End Property
        
        Private Property _InvoiceDueImplementation() As Global.System.Nullable(Of Date) Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.InvoiceDue
            Get
                Return Me.InvoiceDue
            End Get
            Set(ByVal value As Global.System.Nullable(Of Date))
                Me.InvoiceDue = value
            End Set
        End Property
        
        Private Property _InvoiceStatusImplementation() As Integer Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.InvoiceStatus
            Get
                Return Me.InvoiceStatus
            End Get
            Set(ByVal value As Integer)
                Me.InvoiceStatus = value
            End Set
        End Property
        
        Private Property _ShipDateImplementation() As Date Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.ShipDate
            Get
                Return Me.ShipDate
            End Get
            Set(ByVal value As Date)
                Me.ShipDate = value
            End Set
        End Property
        
        Private Property _PatientImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.Patient
            Get
                Return Me.Patient
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Patient = DirectCast(value, Global.ApplicationData.Implementation.Patient)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Patient")
                End If
            End Set
        End Property
        
        Private ReadOnly Property _InvoiceDetailsImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Invoice.DetailsClass.IImplementation.InvoiceDetails
            Get
                Return Me.InvoiceDetails
            End Get
        End Property
        
        Private Sub OnInvoice_PatientChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Patient")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
        
        Friend Class Metadata
        
            <Global.System.ServiceModel.DomainServices.Server.Include> _
            Public Property Patient As Global.ApplicationData.Implementation.Patient
        
        End Class
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    <Global.System.ComponentModel.DataAnnotations.MetadataType(GetType(Global.ApplicationData.Implementation.InvoiceDetail.Metadata))> _
    Partial Public Class InvoiceDetail
        Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _QuantityImplementation() As Integer Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.Quantity
            Get
                Return Me.Quantity
            End Get
            Set(ByVal value As Integer)
                Me.Quantity = value
            End Set
        End Property
        
        Private Property _UnitPriceImplementation() As Decimal Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.UnitPrice
            Get
                Return Me.UnitPrice
            End Get
            Set(ByVal value As Decimal)
                Me.UnitPrice = value
            End Set
        End Property
        
        Private Property _Product_ProductIDImplementation() As Integer Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.Product_ProductID
            Get
                Return Me.Product_ProductID
            End Get
            Set(ByVal value As Integer)
                Me.Product_ProductID = value
            End Set
        End Property
        
        Private Property _InvoiceImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.InvoiceDetail.DetailsClass.IImplementation.Invoice
            Get
                Return Me.Invoice
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Invoice = DirectCast(value, Global.ApplicationData.Implementation.Invoice)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Invoice")
                End If
            End Set
        End Property
        
        Private Sub OnInvoice_InvoiceDetailChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Invoice")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
        
        Friend Class Metadata
        
            <Global.System.ServiceModel.DomainServices.Server.Include> _
            Public Property Invoice As Global.ApplicationData.Implementation.Invoice
        
        End Class
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    <Global.System.ComponentModel.DataAnnotations.MetadataType(GetType(Global.ApplicationData.Implementation.Appointment.Metadata))> _
    Partial Public Class Appointment
        Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _AppointmentTimeImplementation() As Date Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation.AppointmentTime
            Get
                Return Me.AppointmentTime
            End Get
            Set(ByVal value As Date)
                Me.AppointmentTime = value
            End Set
        End Property
        
        Private Property _AppointmentTypeImplementation() As Short Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation.AppointmentType
            Get
                Return Me.AppointmentType
            End Get
            Set(ByVal value As Short)
                Me.AppointmentType = value
            End Set
        End Property
        
        Private Property _DoctorNotesImplementation() As String Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation.DoctorNotes
            Get
                Return Me.DoctorNotes
            End Get
            Set(ByVal value As String)
                Me.DoctorNotes = value
            End Set
        End Property
        
        Private Property _PatientImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Appointment.DetailsClass.IImplementation.Patient
            Get
                Return Me.Patient
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Patient = DirectCast(value, Global.ApplicationData.Implementation.Patient)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Patient")
                End If
            End Set
        End Property
        
        Private Sub OnAppointment_PatientChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Patient")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
        
        Friend Class Metadata
        
            <Global.System.ServiceModel.DomainServices.Server.Include> _
            Public Property Patient As Global.ApplicationData.Implementation.Patient
        
        End Class
    End Class
    
End Namespace

Namespace PrescriptionContoso.Implementation

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Product
        Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation

        Private ReadOnly Property _ProductIDImplementation() As Integer Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductID
            Get
                Return Me.ProductID
            End Get
        End Property
        
        Private Property _ProductNameImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductName
            Get
                Return Me.ProductName
            End Get
            Set(ByVal value As String)
                Me.ProductName = value
            End Set
        End Property
        
        Private Property _MSRPImplementation() As Decimal Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.MSRP
            Get
                Return Me.MSRP
            End Get
            Set(ByVal value As Decimal)
                Me.MSRP = value
            End Set
        End Property
        
        Private Property _DescriptionImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.Description
            Get
                Return Me.Description
            End Get
            Set(ByVal value As String)
                Me.Description = value
            End Set
        End Property
        
        Private Property _ProductImageImplementation() As Byte() Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductImage
            Get
                Return Me.ProductImage
            End Get
            Set(ByVal value As Byte())
                Me.ProductImage = value
            End Set
        End Property
        
        Private Property _CategoryImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.Category
            Get
                Return Me.Category
            End Get
            Set(ByVal value As String)
                Me.Category = value
            End Set
        End Property
        
        Private ReadOnly Property _ProductRebatesImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductRebates
            Get
                Return Me.ProductRebates
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    <Global.System.ComponentModel.DataAnnotations.MetadataType(GetType(Global.PrescriptionContoso.Implementation.ProductRebate.Metadata))> _
    Partial Public Class ProductRebate
        Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation

        Private ReadOnly Property _ProductRebateIDImplementation() As Integer Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.ProductRebateID
            Get
                Return Me.ProductRebateID
            End Get
        End Property
        
        Private Property _RebateStartImplementation() As Global.System.Nullable(Of Date) Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.RebateStart
            Get
                Return Me.RebateStart
            End Get
            Set(ByVal value As Global.System.Nullable(Of Date))
                Me.RebateStart = value
            End Set
        End Property
        
        Private Property _RebateEndImplementation() As Global.System.Nullable(Of Date) Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.RebateEnd
            Get
                Return Me.RebateEnd
            End Get
            Set(ByVal value As Global.System.Nullable(Of Date))
                Me.RebateEnd = value
            End Set
        End Property
        
        Private Property _RebateImplementation() As Global.System.Nullable(Of Decimal) Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.Rebate
            Get
                Return Me.Rebate
            End Get
            Set(ByVal value As Global.System.Nullable(Of Decimal))
                Me.Rebate = value
            End Set
        End Property
        
        Private Property _ProductImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.ProductRebate.DetailsClass.IImplementation.Product
            Get
                Return Me.Product
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Product = DirectCast(value, Global.PrescriptionContoso.Implementation.Product)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Product")
                End If
            End Set
        End Property
        
        Private Sub OnProductIDChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Product")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
        
        Friend Class Metadata
        
            <Global.System.ServiceModel.DomainServices.Server.Include> _
            Public Property Product As Global.PrescriptionContoso.Implementation.Product
        
        End Class
    End Class
    
End Namespace

