<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDomainUnhandledException" xml:space="preserve">
    <value>An unhandled exception has been detected in the current application domain {0}. There was no exception object available for detailed information.</value>
  </data>
  <data name="CloudQueueNotDiscoverable" xml:space="preserve">
    <value>One of the location properties of the {0} queue indicate that the queue cannot be discovered. None of the registered queue location resolvers were able to determine the location of this queue.</value>
  </data>
  <data name="CloudRoleExtensionNotAttached" xml:space="preserve">
    <value>The {0} extension has not been correctly attached to a cloud role instance.</value>
  </data>
  <data name="ConfigSectionNotFoundInConfigFile" xml:space="preserve">
    <value>The application's configuration file {0} doesn't contain a section titled {1}. This section is compulsory for the application in order to function properly. Please add this section into the configuration file.</value>
  </data>
  <data name="ConfigSectionNotFoundInConfigSource" xml:space="preserve">
    <value>The application's current configuration source doesn't contain a section {0}. This section is compulsory for the application in order to function properly. Please add this section into the configuration source.</value>
  </data>
  <data name="ContainerNameContainsInvalidCharacters" xml:space="preserve">
    <value>Container names must start with a letter or number, and can contain only letters, numbers, and the dash (-) character.</value>
  </data>
  <data name="ContainerNameInvalidDashSequence" xml:space="preserve">
    <value>Every dash (-) character must be immediately preceded and followed by a letter or number.</value>
  </data>
  <data name="ContainerNameTooLong" xml:space="preserve">
    <value>Container names must be from 3 through 63 characters long. Please refer to the "Naming Containers, Blobs, and Metadata" section in the MSDN library for more information.</value>
  </data>
  <data name="DefaultServiceBusEndpointNotFound" xml:space="preserve">
    <value>The {1} section in the configuration file {0} doesn't define a default endpoint for the Windows Azure Service Bus. Please check the application documentation on how to configure the default Service Bus endpoint.</value>
  </data>
  <data name="ExtensionObjectNotFound" xml:space="preserve">
    <value>An instance of type {0} has not been found in the collection of registered extensions. Please make sure that an extension of this type is correctly and timely registered to enable its consumers to locate the instance at runtime.</value>
  </data>
  <data name="SpecifiedServiceBusEndpointNotFound" xml:space="preserve">
    <value>The definition for a Windows Azure Service Bus endpoint {0} has not been found in the {1} section in the configuration file or source. Please ensure that the definition with the above name exists.</value>
  </data>
  <data name="SpecifiedServiceBusEndpointNotFoundInConfigFile" xml:space="preserve">
    <value>The {1} section in the configuration file {0} doesn't define a Windows Azure Service Bus endpoint definition {2}. Please add this endpoint into the above configuration file.</value>
  </data>
  <data name="StorageAccountCollectionIsEmpty" xml:space="preserve">
    <value>The specified collection of storage account definitions doesn't not contain any items. The collection must not be empty.</value>
  </data>
  <data name="StorageAccountNotFoundInConfigSource" xml:space="preserve">
    <value>The application's current configuration source doesn't contain a definition for Azure storage account {0}. This storage account is compulsory for the application in order to function properly. Please add the storage account definition into the configuration source.</value>
  </data>
  <data name="SubscribersNotFound" xml:space="preserve">
    <value>The message from the {0} queue in storage account {1} could not be processed because no subscribers were found to handle it.</value>
  </data>
</root>